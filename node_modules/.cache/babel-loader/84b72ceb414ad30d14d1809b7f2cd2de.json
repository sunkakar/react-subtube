{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _a;\n\nvar axios_1 = __importDefault(require(\"axios\"));\n\nvar extend_1 = __importDefault(require(\"extend\"));\n\nvar rax = __importStar(require(\"retry-axios\"));\n\nexports.HOST_ADDRESS = 'http://metadata.google.internal';\nexports.BASE_PATH = '/computeMetadata/v1';\nexports.BASE_URL = exports.HOST_ADDRESS + exports.BASE_PATH;\nexports.HEADER_NAME = 'Metadata-Flavor';\nexports.HEADER_VALUE = 'Google';\nexports.HEADERS = Object.freeze((_a = {}, _a[exports.HEADER_NAME] = exports.HEADER_VALUE, _a)); // Accepts an options object passed from the user to the API.  In the\n// previous version of the API, it referred to a `Request` options object.\n// Now it refers to an Axios Request Config object.  This is here to help\n// ensure users don't pass invalid options when they upgrade from 0.4 to 0.5.\n\nfunction validate(options) {\n  var vpairs = [{\n    invalid: 'uri',\n    expected: 'url'\n  }, {\n    invalid: 'json',\n    expected: 'data'\n  }, {\n    invalid: 'qs',\n    expected: 'params'\n  }];\n\n  for (var _i = 0, vpairs_1 = vpairs; _i < vpairs_1.length; _i++) {\n    var pair = vpairs_1[_i];\n\n    if (options[pair.invalid]) {\n      var e = \"'\" + pair.invalid + \"' is not a valid configuration option. Please use '\" + pair.expected + \"' instead. This library is using Axios for requests. Please see https://github.com/axios/axios to learn more about the valid request options.\";\n      throw new Error(e);\n    }\n  }\n}\n\nfunction metadataAccessor(type, options, noResponseRetries) {\n  if (noResponseRetries === void 0) {\n    noResponseRetries = 3;\n  }\n\n  return __awaiter(this, void 0, void 0, function () {\n    var property, ax, baseOpts, reqOpts;\n    return __generator(this, function (_a) {\n      options = options || {};\n\n      if (typeof options === 'string') {\n        options = {\n          property: options\n        };\n      }\n\n      property = '';\n\n      if (typeof options === 'object' && options.property) {\n        property = '/' + options.property;\n      }\n\n      validate(options);\n      ax = axios_1.default.create();\n      rax.attach(ax);\n      baseOpts = {\n        url: exports.BASE_URL + \"/\" + type + property,\n        headers: Object.assign({}, exports.HEADERS),\n        raxConfig: {\n          noResponseRetries: noResponseRetries,\n          instance: ax\n        }\n      };\n      reqOpts = extend_1.default(true, baseOpts, options);\n      delete reqOpts.property;\n      return [2\n      /*return*/\n      , ax.request(reqOpts).then(function (res) {\n        // NOTE: node.js converts all incoming headers to lower case.\n        if (res.headers[exports.HEADER_NAME.toLowerCase()] !== exports.HEADER_VALUE) {\n          throw new Error(\"Invalid response from metadata service: incorrect \" + exports.HEADER_NAME + \" header.\");\n        } else if (!res.data) {\n          throw new Error('Invalid response from the metadata service');\n        }\n\n        return res;\n      }).catch(function (err) {\n        if (err.response && err.response.status !== 200) {\n          err.message = 'Unsuccessful response status code. ' + err.message;\n        }\n\n        throw err;\n      })];\n    });\n  });\n}\n\nfunction instance(options) {\n  return metadataAccessor('instance', options);\n}\n\nexports.instance = instance;\n\nfunction project(options) {\n  return metadataAccessor('project', options);\n}\n\nexports.project = project;\n/**\n * Determine if the metadata server is currently available.\n */\n\nfunction isAvailable() {\n  return __awaiter(this, void 0, void 0, function () {\n    var err_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]); // Attempt to read instance metadata. As configured, this will\n          // retry 3 times if there is a valid response, and fail fast\n          // if there is an ETIMEDOUT or ENOTFOUND error.\n\n\n          return [4\n          /*yield*/\n          , metadataAccessor('instance', undefined, 0)];\n\n        case 1:\n          // Attempt to read instance metadata. As configured, this will\n          // retry 3 times if there is a valid response, and fail fast\n          // if there is an ETIMEDOUT or ENOTFOUND error.\n          _a.sent();\n\n          return [2\n          /*return*/\n          , true];\n\n        case 2:\n          err_1 = _a.sent(); // Failure to resolve the metadata service means that it is not available.\n\n          if (err_1.code && (err_1.code === 'ENOTFOUND' || err_1.code === 'ENOENT')) {\n            return [2\n            /*return*/\n            , false];\n          } // Throw unexpected errors.\n\n\n          throw err_1;\n\n        case 3:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nexports.isAvailable = isAvailable;","map":null,"metadata":{},"sourceType":"script"}
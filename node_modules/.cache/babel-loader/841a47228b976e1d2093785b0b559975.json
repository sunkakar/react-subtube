{"ast":null,"code":"import _regeneratorRuntime from \"/home/sunnyd/Desktop/Weather App/subtube/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/home/sunnyd/Desktop/Weather App/subtube/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sunnyd/Desktop/Weather App/subtube/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sunnyd/Desktop/Weather App/subtube/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sunnyd/Desktop/Weather App/subtube/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sunnyd/Desktop/Weather App/subtube/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _asyncToGenerator from \"/home/sunnyd/Desktop/Weather App/subtube/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/sunnyd/Desktop/Weather App/subtube/src/components/content.js\";\nimport React from \"react\";\nimport { Container } from 'semantic-ui-react';\nimport { Button } from 'semantic-ui-react';\nimport { auth } from 'google-auth-library'; // Google oauth button\n\nfunction handleGoogleAuth() {\n  return _handleGoogleAuth.apply(this, arguments);\n}\n\nfunction _handleGoogleAuth() {\n  _handleGoogleAuth = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var client, projectId, url, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return auth.getClient({\n              scopes: 'https://www.googleapis.com/auth/cloud-platform'\n            });\n\n          case 2:\n            client = _context.sent;\n            _context.next = 5;\n            return auth.getProjectId();\n\n          case 5:\n            projectId = _context.sent;\n            url = \"https://www.googleapis.com/dns/v1/projects/\".concat(projectId);\n            _context.next = 9;\n            return client.request({\n              url: url\n            });\n\n          case 9:\n            res = _context.sent;\n            console.log(res.data);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _handleGoogleAuth.apply(this, arguments);\n}\n\nvar Content =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Content, _React$Component);\n\n  function Content(props) {\n    var _this;\n\n    _classCallCheck(this, Content);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Content).call(this, props));\n    _this.state = {\n      value: 'NO Value'\n    };\n    return _this;\n  } // handleGoogleAuth = () => {\n  //     this.setState({value: this.state.value + 'Found'})\n  // }\n\n\n  _createClass(Content, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, this.state.value), React.createElement(Button.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"youtube\",\n        onClick: handleGoogleAuth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Connect to Google\"), React.createElement(Button.Or, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"No, Thank You\")));\n    }\n  }]);\n\n  return Content;\n}(React.Component);\n\nexport default Content;","map":{"version":3,"sources":["/home/sunnyd/Desktop/Weather App/subtube/src/components/content.js"],"names":["React","Container","Button","auth","handleGoogleAuth","getClient","scopes","client","getProjectId","projectId","url","request","res","console","log","data","Content","props","state","value","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAAQC,IAAR,QAAmB,qBAAnB,C,CAEA;;SAEeC,gB;;;;;;;2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACyBD,IAAI,CAACE,SAAL,CAAe;AAClCC,cAAAA,MAAM,EAAE;AAD0B,aAAf,CADzB;;AAAA;AACUC,YAAAA,MADV;AAAA;AAAA,mBAI4BJ,IAAI,CAACK,YAAL,EAJ5B;;AAAA;AAIUC,YAAAA,SAJV;AAKUC,YAAAA,GALV,wDAK8DD,SAL9D;AAAA;AAAA,mBAMsBF,MAAM,CAACI,OAAP,CAAe;AAAED,cAAAA,GAAG,EAAHA;AAAF,aAAf,CANtB;;AAAA;AAMUE,YAAAA,GANV;AAOIC,YAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;;AAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;IAUMC,O;;;;;AACF,mBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,iFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACGC,MAAAA,KAAK,EAAE;AADV,KAAb;AAFc;AAKjB,G,CAED;AACA;AACA;;;;;6BAEQ;AACJ,aACI,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKD,KAAL,CAAWC,KAAf,CADJ,EAEI,oBAAC,MAAD,CAAQ,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAEf,gBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAEQ,oBAAC,MAAD,CAAQ,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFR,EAGI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHJ,CAFJ,CADJ;AAUH;;;;EAvBiBJ,KAAK,CAACoB,S;;AA0B5B,eAAeJ,OAAf","sourcesContent":["import React from \"react\";\nimport { Container } from 'semantic-ui-react';\nimport { Button } from 'semantic-ui-react';\nimport {auth} from 'google-auth-library';\n\n// Google oauth button\n\nasync function handleGoogleAuth() {\n    const client = await auth.getClient({\n      scopes: 'https://www.googleapis.com/auth/cloud-platform'\n    });\n    const projectId = await auth.getProjectId();\n    const url = `https://www.googleapis.com/dns/v1/projects/${projectId}`;\n    const res = await client.request({ url });\n    console.log(res.data);\n  }\n\nclass Content extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n                        value: 'NO Value'\n                    };\n    }\n\n    // handleGoogleAuth = () => {\n    //     this.setState({value: this.state.value + 'Found'})\n    // }\n\n    render(){\n        return (\n            <Container textAlign=\"center\">\n                <p>{this.state.value}</p>\n                <Button.Group>\n                    <Button color=\"youtube\" onClick={handleGoogleAuth}>Connect to Google</Button>\n                        <Button.Or />\n                    <Button>No, Thank You</Button>\n                </Button.Group>\n            </Container>\n        );\n    }\n}\n\nexport default Content;"]},"metadata":{},"sourceType":"module"}